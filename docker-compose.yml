version: '3.8'

services:
  # API Backend
  rag-api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - DATABASE_URL=sqlite:///./rag_sessions.db
    env_file:
      - .env
    volumes:
      - ./chroma_db:/app/chroma_db
      - ./pdf_storage:/app/pdf_storage
      - ./cache:/app/cache
      - ./reports:/app/reports
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - rag-network

  # Prometheus - Monitoring
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    networks:
      - rag-network
    depends_on:
      - rag-api

  # Grafana - Visualisation
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_INSTALL_PLUGINS=grafana-clock-panel
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana-dashboard.json:/etc/grafana/provisioning/dashboards/rag-analyst.json
    networks:
      - rag-network
    depends_on:
      - prometheus

networks:
  rag-network:
    driver: bridge

volumes:
  chroma_data:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local
